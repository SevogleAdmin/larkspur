package com.sevogle.link.common.web.client;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

public class MessageDB implements Serializable {
    private static final long serialVersionUID = 6546136861916164164L;

    private String _id = ""; // GUID generated by the message creator
    public static final String ID = "_id";
    private String channelId;
    private String protocolSpecificId;
    private MessageSource messageSource;
    private long sent; // timestamp
    public static final String SENT = "sent";
    private long received;
    private String subjectNormalized;
    private String subjectRaw;
    private RelatedMessageDescriptor parent;
    private AddressDescriptor from;
    private AddressDescriptor replyTo;
    private final List<AddressDescriptor> to = new ArrayList<AddressDescriptor>();
    private final List<AddressDescriptor> cc = new ArrayList<AddressDescriptor>();
    private final List<AddressDescriptor> bcc = new ArrayList<AddressDescriptor>();
    private final List<NormativeBlockDescriptor> normalizedMessage = new ArrayList<NormativeBlockDescriptor>();
    private final List<MessageContentDescriptor> contentObjects = new ArrayList<MessageContentDescriptor>();

    public MessageDB() {
    }

    public MessageDB(String _id, String channelId, String protocolSpecificId, MessageSource messageSource, long sent,
            long received, String subjectNormalized, String subjectRaw, RelatedMessageDescriptor parent,
            AddressDescriptor from, AddressDescriptor replyTo) {
        this._id = _id;
        this.channelId = channelId;
        this.protocolSpecificId = protocolSpecificId;
        this.messageSource = messageSource;
        this.sent = sent;
        this.received = received;
        this.subjectNormalized = subjectNormalized;
        this.subjectRaw = subjectRaw;
        this.parent = parent;
        this.from = from;
        this.replyTo = replyTo;
    }

    public String getId() {
        return _id;
    }

    public void setId(String id) {
        _id = id;
    }

    public String getChannelId() {
        return channelId;
    }

    public void setChannelId(String channelId) {
        this.channelId = channelId;
    }

    public String getProtocolSpecificId() {
        return protocolSpecificId;
    }

    public void setProtocolSpecificId(String protocolSpecificId) {
        this.protocolSpecificId = protocolSpecificId;
    }

    public MessageSource getMessageSource() {
        return messageSource;
    }

    public void setMessageSource(MessageSource messageSource) {
        this.messageSource = messageSource;
    }

    public long getSent() {
        return sent;
    }

    public void setSent(long sent) {
        this.sent = sent;
    }

    public long getReceived() {
        return received;
    }

    public void setReceived(long received) {
        this.received = received;
    }

    public String getSubjectNormalized() {
        return subjectNormalized;
    }

    public void setSubjectNormalized(String subjectNormalized) {
        this.subjectNormalized = subjectNormalized;
    }

    public String getSubjectRaw() {
        return subjectRaw;
    }

    public void setSubjectRaw(String subjectRaw) {
        this.subjectRaw = subjectRaw;
    }

    public RelatedMessageDescriptor getParent() {
        return parent;
    }

    public void setParent(RelatedMessageDescriptor parent) {
        this.parent = parent;
    }

    public AddressDescriptor getFrom() {
        return from;
    }

    public void setFrom(AddressDescriptor from) {
        this.from = from;
    }

    public AddressDescriptor getReplyTo() {
        return replyTo;
    }

    public void setReplyTo(AddressDescriptor replyTo) {
        this.replyTo = replyTo;
    }

    public List<AddressDescriptor> getTo() {
        return to;
    }

    public List<AddressDescriptor> getCc() {
        return cc;
    }

    public List<AddressDescriptor> getBcc() {
        return bcc;
    }

    public List<NormativeBlockDescriptor> getNormalizedMessage() {
        return normalizedMessage;
    }

    public List<MessageContentDescriptor> getContentObjects() {
        return contentObjects;
    }

}
